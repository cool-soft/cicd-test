name: Test CICD

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: cicd-test

jobs:

 cicd:
    runs-on: [ubuntu-latest]
    steps:

      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Install python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: "Install project dependencies"
        run: if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: "Run tests"
        run: pytest

      - name: "Archive pytest results"
        uses: actions/upload-artifact@v2
        if: ${{!cancelled()}}
        with:
          name: pytest-report
          path: pytest-report.html

      - name: "Build docker image"
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: "Log in to registry"
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: "Push image"
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION