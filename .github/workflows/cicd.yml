name: Test CICD

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: "cicd-test"

jobs:

 cicd:
    runs-on: [ubuntu-latest]

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Add source directories to PYTHONPATH"
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: "Install python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: "Install project dependencies"
        run: if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: "Run tests"
        run: pytest

      - name: "Archive pytest results"
        uses: actions/upload-artifact@v2
        if: ${{!cancelled()}}
        with:
          name: pytest-report
          path: pytest-report.html

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.ACTOR }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push docker image"
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ github.REPOSITORY_OWNER }}/$IMAGE_NAME:${{ github.REF_NAME }}
          labels: "runnumber=${GITHUB_RUN_ID}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

#        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
#
#      - name: "Push image"
#        run: |
#          IMAGE_ID=ghcr.io/${{ github.REPOSITORY_OWNER }}/$IMAGE_NAME
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#          VERSION=${{ github.REF_NAME }}
#
#          echo IMAGE_ID=$IMAGE_ID
#          echo VERSION=$VERSION
#
#          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION